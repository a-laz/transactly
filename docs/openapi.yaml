openapi: 3.0.3
info:
  title: Transactly Payments API
  version: 0.2.0
servers:
  - url: /api
paths:
  /eth-account:
    get:
      summary: Get derived EVM sender and balance
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
  /agent-account:
    get:
      summary: Get agent account metadata and balance
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
  /enhanced/invoice:
    post:
      summary: Create enhanced invoice
      security:
        - ApiKeyAuth: []
      parameters:
        - in: header
          name: Idempotency-Key
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    value:
                      type: string
                    asset:
                      type: object
                      properties:
                        symbol:
                          type: string
                        chain:
                          type: string
                  required: [value, asset]
                payTo:
                  type: object
                  properties:
                    asset:
                      type: object
                    address:
                      type: string
                  required: [asset, address]
                memo:
                  type: string
      responses:
        '200':
          description: OK
  /crosschain/quote:
    post:
      summary: Get cross-chain quote
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
  /crosschain/execute:
    post:
      summary: Execute cross-chain route
      security:
        - ApiKeyAuth: []
      parameters:
        - in: header
          name: Idempotency-Key
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
  /crosschain/routes:
    get:
      summary: List supported rails/routes
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
  /webhooks/outbox:
    get:
      summary: List webhook outbox
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: status
          schema: { type: string, enum: [pending, delivering, delivered, dead] }
      responses:
        '200': { description: OK }
  /webhooks/dlq:
    get:
      summary: List webhook DLQ
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: limit
          schema: { type: integer }
      responses:
        '200': { description: OK }
  /webhooks/requeue/{id}:
    post:
      summary: Requeue outbox id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /webhooks/replay/{dlqId}:
    post:
      summary: Replay DLQ id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: dlqId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

